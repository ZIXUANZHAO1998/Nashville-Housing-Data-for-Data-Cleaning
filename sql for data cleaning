SELECT TOP (1000) [UniqueID ]
      ,[ParcelID]
      ,[LandUse]
      ,[PropertyAddress]
      ,[SaleDate]
      ,[SalePrice]
      ,[LegalReference]
      ,[SoldAsVacant]
      ,[OwnerName]
      ,[OwnerAddress]
      ,[Acreage]
      ,[TaxDistrict]
      ,[LandValue]
      ,[BuildingValue]
      ,[TotalValue]
      ,[YearBuilt]
      ,[Bedrooms]
      ,[FullBath]
      ,[HalfBath]
      ,[saleDateConverted]
  FROM [PortfolioProject].[dbo].[Nashville  Housing]



-- cleanin data in sql queries

SELECT *
FROM PortfolioProject.dbo.[Nashville  Housing]

-----------------------------------------------------------------------------

-- standardize date format

SELECT SaleDate,CONVERT(date,SaleDate)
FROM PortfolioProject.dbo.[Nashville  Housing]

UPDATE PortfolioProject.dbo.[Nashville  Housing]
SET SaleDate = CONVERT(date,SaleDate)

ALTER TABLE PortfolioProject.dbo.[Nashville  Housing]
Add SaleDateConverted Date;

UPDATE PortfolioProject.dbo.[Nashville  Housing]
SET SaleDateConverted = CONVERT (Date,SaleDate)

 -----------------------------------------------------------------------------------
 -- Populate Property Address Data

 SELECT PropertyAddress
 FROM PortfolioProject.dbo.[Nashville  Housing]
 WHERE PropertyAddress IS NULL
 ORDER BY ParcelID

 SELECT a.ParcelID, a.PropertyAddress,b.ParcelID,b.PropertyAddress, ISNULL(a.PropertyAddress,b.PropertyAddress)
 FROM PortfolioProject.dbo.[Nashville  Housing] a
 JOIN PortfolioProject.dbo.[Nashville  Housing] b
 ON a.ParcelID = b.ParcelID
 AND a.[UniqueID ] <> b.[UniqueID ]
 WHERE a.PropertyAddress IS NULL


 UPDATE PortfolioProject.dbo.[Nashville  Housing] a
 SET PropertyAddress =ISNULL(a.PropertyAddress,b.PropertyAddress)
  FROM PortfolioProject.dbo.[Nashville  Housing] a
 JOIN PortfolioProject.dbo.[Nashville  Housing] b
 ON a.ParcelID = b.ParcelID
 AND a.[UniqueID ] <> b.[UniqueID ]
 WHERE a.PropertyAddress IS NULL


 ----------------------------------------------------------------------------------------
 --Breaking out Address into Individual Column (Address,City,State)

-- ALTER TABLE PortfolioProject.dbo.[Nashville  Housing]
-- DROP COLUMN PropertySplitCity

 SELECT PropertyAddress
 FROM PortfolioProject.dbo.[Nashville  Housing]

 SELECT
 SUBSTRING (PropertyAddress, 1 , CHARINDEX(',',PropertyAddress)-1) AS Address
 ,SUBSTRING (PropertyAddress,  CHARINDEX(',',PropertyAddress)+1,LEN(PropertyAddress)) AS Address
 FROM  PortfolioProject.dbo.[Nashville  Housing]


 ALTER TABLE PortfolioProject.dbo.[Nashville  Housing]
 Add PropertySplitAddress Nvarchar(255);

 UPDATE PortfolioProject.dbo.[Nashville  Housing]
 SET PropertySplitAddress = SUBSTRING (PropertyAddress, 1 , CHARINDEX(',',PropertyAddress)-1) 

 ALTER TABLE PortfolioProject.dbo.[Nashville  Housing]
 Add PropertySplitCity Nvarchar(255);

 UPDATE PortfolioProject.dbo.[Nashville  Housing]
 SET PropertySplitCity = SUBSTRING (PropertyAddress,  CHARINDEX(',',PropertyAddress)+1,LEN(PropertyAddress))



 SELECT *
 FROM PortfolioProject.dbo.[Nashville  Housing]



 SELECT OwnerAddress
 FROM PortfolioProject.dbo.[Nashville  Housing]

 SELECT
 PARSENAME(REPLACE(OwnerAddress,',','.'),3),
  PARSENAME(REPLACE(OwnerAddress,',','.'),2),
 PARSENAME(REPLACE(OwnerAddress,',','.'),1)
  FROM PortfolioProject.dbo.[Nashville  Housing]


  
 ALTER TABLE PortfolioProject.dbo.[Nashville  Housing]
 Add OwnerSplitAddress Nvarchar(255);

 UPDATE PortfolioProject.dbo.[Nashville  Housing]
 SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress,',','.'),3)
 
 ALTER TABLE PortfolioProject.dbo.[Nashville  Housing]
 Add OwnerSplitCity Nvarchar(255);

 UPDATE PortfolioProject.dbo.[Nashville  Housing]
 SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress,',','.'),2)


 ALTER TABLE PortfolioProject.dbo.[Nashville  Housing]
 Add OwnerSplitstate Nvarchar(255);

 UPDATE PortfolioProject.dbo.[Nashville  Housing]
 SET OwnerSplitstate = PARSENAME(REPLACE(OwnerAddress,',','.'),1)



 SELECT *
 FROM PortfolioProject.dbo.[Nashville  Housing]


 --------------------------------------------------------------------------------

 --Change Y and N to Yes and No in "Sold as Vacant" field

 SELECT DISTINCT (SoldAsVacant),COUNT(SoldAsVacant)
 FROM PortfolioProject.dbo.[Nashville  Housing]
 GROUP BY SoldAsVacant
 ORDER BY 2


 SELECT SoldAsVacant
 , CASE WHEN SoldAsVacant = 'Y' THEN 'Yes'
 WHEN SoldAsVacant= 'N' THEN 'No'
 ELSE SoldASVacant
 END
 FROM PortfolioProject.dbo.[Nashville  Housing]


 UPDATE PortfolioProject.dbo.[Nashville  Housing]
 SET SoldAsVacant = CASE WHEN SoldAsVacant = 'Y' THEN 'Yes'
 WHEN SoldAsVacant= 'N' THEN 'No'
 ELSE SoldASVacant
 END

 -------------------------------------------------------------------------------

 --Romove Duplicates


 WITH RowNumCTE AS(
 SELECT *,
 ROW_NUMBER() OVER (
 PARTITION BY ParcelID,
              PropertyAddress,
			  SalePrice,
			  SaleDate,
			  LegalReference
			  ORDER BY 
			  UniqueID
			  ) row_num

 FROM PortfolioProject.dbo.[Nashville  Housing]
 --ORDER BY ParcelID
 )

 DELETE 
 FROM RowNumCTE
 WHERE row_num >1
 --ORDER BY PropertyAddress

 --------------------------------------------------------------------------------

-- DELETE Unused Columns



SELECT * 
FROM PortfolioProject.dbo.[Nashville  Housing]


ALTER TABLE PortfolioProject.dbo.[Nashville  Housing]
DROP COLUMN OwnerAddress,TaxDistrict ,PropertyAddress


ALTER TABLE PortfolioProject.dbo.[Nashville  Housing]
DROP COLUMN SaleDate
